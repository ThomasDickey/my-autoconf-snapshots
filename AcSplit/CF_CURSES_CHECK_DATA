dnl CF_CURSES_CHECK_DATA version: 7 updated: 2018/01/03 04:47:33
dnl --------------------
dnl Check if curses.h defines the given data/variable.
dnl Use this after CF_NCURSES_CONFIG or CF_CURSES_CONFIG.
dnl
dnl $1 = data item(s) to check for
dnl $2 = action on success, e.g., "break" to quit checking a series of choices
AC_DEFUN([CF_CURSES_CHECK_DATA],
[
for cf_data in $1
do
AC_MSG_CHECKING(for data $cf_data declaration in ${cf_cv_ncurses_header:-curses.h})

AC_TRY_COMPILE(CF__CURSES_HEAD,[
void *foo = &($cf_data)
],[cf_result=yes
],[cf_result=no])
AC_MSG_RESULT($cf_result)

if test $cf_result = yes ; then
	CF_UPPER(cf_result,have_curses_data_$cf_data)
	AC_DEFINE_UNQUOTED($cf_result)
	ifelse($2,,,[$2])
else
	AC_MSG_CHECKING(for data $cf_data in library)
	# BSD linkers insist on making weak linkage, but resolve at runtime.
	AC_TRY_RUN(CF__CURSES_HEAD
[
extern char $cf_data;
int main(void)
{
	void *foo = &($cf_data);
	fprintf(stderr, "testing linkage of $cf_data:%p\n", (void *)foo);
	${cf_cv_main_return:-return}(foo == 0);
}],[cf_result=yes
],[cf_result=no],[
	# cross-compiling
	AC_TRY_LINK(CF__CURSES_HEAD
[extern char $cf_data;],[
	do {
		void *foo = &($cf_data);
		fprintf(stderr, "testing linkage of $cf_data:%p\n", (void *)foo);
		${cf_cv_main_return:-return}(foo == 0);
	} while (0)
],[cf_result=yes],[cf_result=no])
])
	AC_MSG_RESULT($cf_result)
	if test $cf_result = yes ; then
		CF_UPPER(cf_result,decl_curses_data_$cf_data)
		AC_DEFINE_UNQUOTED($cf_result)
		# do not exit loop here, since we prefer system's declarations
	fi
fi
done
])dnl
